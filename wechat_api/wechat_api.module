<?php
use Drupal\wechat_api\Wechat;

/**
 * Implements hook_permission().
 */
function wechat_api_permission() {
  return array(
    'administer wechat configuration' => array(
      'title' => t('微信接入设置'),
      'description' => t('允许修改微信接入信息.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function wechat_api_menu() {
  $items['admin/config/wechat'] = array(
    'title' => '微信',
    'description' => '微信相关设置.',
    'position' => 'left',
    'weight' => 0,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/wechat/api'] = array(
    'title' => '微信API设置',
    'description' => '设置Token、Appid、Appsecret.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wechat_api_settings_form'),
    'access arguments' => array('administer wechat configuration'),
  );
  $items['wechat'] = array(
    'title' => 'wechat',
    'description' => 'wechat callback',
    'page callback' => 'wechat_api_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function wechat_api_settings_form($form, &$form_state) {
  global $base_url;
  $form['required'] = array(
    '#type' => 'fieldset',
    '#title' => t('Wechat app info'),
    '#description' => t("当前服务器微信接入地址：<b>%base_url</b>", array('%base_url' => $base_url . '/wechat')),
  );

  $form['required']['wechat_api_appid'] = array(
    '#type' => 'textfield',
    '#title' => t('Appid'),
    '#default_value' => variable_get('wechat_api_appid', ''),
    '#required' => TRUE,
  );
  $form['required']['wechat_api_appsecret'] = array(
    '#type' => 'textfield',
    '#title' => t('Appsecret'),
    '#default_value' => variable_get('wechat_api_appsecret', ''),
    '#required' => TRUE,
  );


  $form['required']['wechat_api_token'] = array(
    '#type' => 'textfield',
    '#title' => t('Token'),
    '#default_value' => variable_get('wechat_api_token', ''),
    '#required' => TRUE,
  );
  $form['required']['wechat_api_encodingaeskey'] = array(
    '#type' => 'textfield',
    '#title' => t('EncodingAESKey'),
    '#default_value' => variable_get('wechat_api_encodingaeskey', ''),
    '#required' => TRUE,
  );

  $form['required']['wechat_api_debug'] = array(
    '#type' => 'checkbox',
    '#title' => t('Debug（测试时使用，选中时不验证消息签名）'),
    '#default_value' => variable_get('wechat_api_debug', FALSE),
  );
  $form['#submit'][] = 'wechat_api_access_token_refresh';
  return system_settings_form($form);
}

function wechat_api_access_token_refresh($form, &$form_state) {
  $token = $form_state['input']['wechat_api_token'];
  $appid = $form_state['input']['wechat_api_appid'];
  $appsecret = $form_state['input']['wechat_api_appsecret'];
  $options = array(
    'token' => $token,
    'appid' => $appid,
    'appsecret' => $appsecret,
  );
  $wechat = new Wechat($options);
  $access_token = $wechat->checkAuth();
  if (!$access_token) {
    drupal_set_message('参数错误！请检查相关设置。', 'error');
  }
  variable_set("wechat_api_access_token", $access_token);
  variable_set("wechat_api_access_token_time", time());
}


function wechat_api_init_wechatobj() {
  $wechat = &drupal_static(__FUNCTION__);
  if (!isset($wechat)) {
    $options = array(
      'token' => variable_get('wechat_api_token', ""),
      'appid' => variable_get('wechat_api_appid', ""),
      'appsecret' => variable_get('wechat_api_appsecret', ""),
      'encodingaeskey' => variable_get('wechat_api_encodingaeskey', ''),
    );
    $wechat = new Wechat($options);
    $access_token = variable_get("wechat_api_access_token", '');
    if (variable_get("wechat_api_access_token_time", 0) > time() - 7000 && $access_token != '') {
      $wechat->checkAuth('', '', $access_token);
      $return = $wechat->getServerIp();
      if (!$return) {
        $access_token = $wechat->checkAuth();
        variable_set("wechat_api_access_token", $access_token);
        variable_set("wechat_api_access_token_time", time());
      }
    }
    else {
      $access_token = $wechat->checkAuth();
      variable_set("wechat_api_access_token", $access_token);
      variable_set("wechat_api_access_token_time", time());
    }
  }
  return $wechat;
}

function wechat_api_get_access_token() {
  $obj = wechat_api_init_wechatobj();
  return $obj->get_access_token();
}

/**
 * @return null
 * @todo 返回微信debug状态  debug 返回 true 否则返回 false
 */
function wechat_api_isdebug() {
  return variable_get('wechat_api_debug', FALSE);
}

/**
 * 微信接口回调函数，提供验证是否接入成功。在wechat_session模块中使用hook_menu_alter()覆写提供更强大的功能。
 */
function wechat_api_callback() {
  $wechat_obj = wechat_api_init_wechatobj();
  $wechat_obj->valid(variable_get('wechat_api_debug', FALSE));
  $wechat_obj->getRev();
  $xml_obj = $wechat_obj->getRevData();
  $xml_obj = (object) $xml_obj;
  $to_user_name = $wechat_obj->getRevFrom();
  $from_user_name = $wechat_obj->getRevTo();
  $request_time = time();
  $content = format_date(time(), 'short') . '
  api配置成功
  ';
  if ($xml_obj->MsgType == 'text') {
    $content .= $wechat_obj->getRevContent();
  }
  else {
    $content .= 'api配置成功。';
  }

  $return_template = "<xml>
      <ToUserName><![CDATA[%s]]></ToUserName>
      <FromUserName><![CDATA[%s]]></FromUserName>
      <CreateTime>%s</CreateTime>
      <MsgType><![CDATA[text]]></MsgType>
      <Content><![CDATA[%s]]></Content>
      <FuncFlag>0</FuncFlag>
    </xml>";

  $result_str = sprintf($return_template, $to_user_name, $from_user_name, $request_time, $content);

  echo $result_str;
}

